import{_ as n,c as s,o as a,a as p}from"./app.ff27b6d0.js";const m='{"title":"\u8BF7\u6C42\u6D41\u7A0B","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u8BF7\u6C42\u6D41\u7A0B","slug":"\u8BF7\u6C42\u6D41\u7A0B"}],"relativePath":"guide/request.md","lastUpdated":1646462617372}',t={},o=p(`<h2 id="\u8BF7\u6C42\u6D41\u7A0B" tabindex="-1">\u8BF7\u6C42\u6D41\u7A0B <a class="header-anchor" href="#\u8BF7\u6C42\u6D41\u7A0B" aria-hidden="true">#</a></h2><p>\u5FAE\u4FE1\u5C0F\u7A0B\u5E8F\u662F\u81EA\u5DF1\u5C01\u88C5\u7684\u8BF7\u6C42\uFF0C\u53EF\u4EE5\u67E5\u770B<code>js/http.js</code></p><p>\u51FA\u53BB\u5F39\u7A97\u63D0\u793A\uFF0C\u4E0B\u9762\u662F\u6838\u5FC3\u7684\u4EE3\u7801</p><div class="language-js"><pre><code><span class="token keyword">let</span> flag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
<span class="token keyword">let</span> _baseUrl <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">if</span> <span class="token punctuation">(</span>flag<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  _baseUrl <span class="token operator">=</span> <span class="token string">&quot;http://192.168.124.10:8080&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
  _baseUrl <span class="token operator">=</span> <span class="token string">&quot;https://admin.ticknet.hnust.cn&quot;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> baseUrl <span class="token operator">=</span> _baseUrl<span class="token punctuation">;</span>
<span class="token keyword">let</span> commonParams <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&quot;POST&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">header</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">dataType</span><span class="token operator">:</span> <span class="token string">&quot;json&quot;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">request</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">opt</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> options <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> commonParams<span class="token punctuation">,</span> opt<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> <span class="token punctuation">{</span> url<span class="token punctuation">,</span> data<span class="token punctuation">,</span> method<span class="token punctuation">,</span> header<span class="token punctuation">,</span> dataType <span class="token punctuation">}</span> <span class="token operator">=</span> options<span class="token punctuation">;</span>
  header<span class="token punctuation">[</span><span class="token string">&quot;Authorization&quot;</span><span class="token punctuation">]</span> <span class="token operator">=</span> wx<span class="token punctuation">.</span><span class="token function">getStorageSync</span><span class="token punctuation">(</span><span class="token string">&quot;token&quot;</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span> <span class="token comment">//\u63D0\u53D6\u50A8\u5B58\u7684token\uFF0C\u653E\u5230\u8BF7\u6C42\u5934\u4E0A\u9762</span>
  <span class="token keyword">let</span> _url <span class="token operator">=</span> baseUrl <span class="token operator">+</span> url<span class="token punctuation">;</span> <span class="token comment">//\u5408\u6210url</span>
  <span class="token function">showFullScreenLoading</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    wx<span class="token punctuation">.</span><span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">url</span><span class="token operator">:</span> _url<span class="token punctuation">,</span>
      <span class="token literal-property property">data</span><span class="token operator">:</span> data<span class="token punctuation">,</span>
      <span class="token literal-property property">method</span><span class="token operator">:</span> method<span class="token punctuation">,</span>
      <span class="token literal-property property">header</span><span class="token operator">:</span> header<span class="token punctuation">,</span>
      <span class="token literal-property property">dataType</span><span class="token operator">:</span> dataType<span class="token punctuation">,</span>
      <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>res <span class="token operator">&amp;&amp;</span> res<span class="token punctuation">.</span>statusCode <span class="token operator">==</span> <span class="token number">200</span> <span class="token operator">&amp;&amp;</span> res<span class="token punctuation">.</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>code <span class="token operator">==</span> <span class="token number">401</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>       <span class="token comment">//401token\u5931\u6548\u91CD\u65B0\u767B\u5F55</span>
            <span class="token function">reLogin</span><span class="token punctuation">(</span>resolve<span class="token punctuation">,</span> reject<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>code <span class="token operator">==</span> <span class="token number">403</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">//403\u65E0\u6743\u9650</span>
            wx<span class="token punctuation">.</span><span class="token function">showToast</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
              <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;\u65E0\u6743\u9650\u64CD\u4F5C&quot;</span><span class="token punctuation">,</span>
              <span class="token literal-property property">icon</span><span class="token operator">:</span> <span class="token string">&quot;loading&quot;</span><span class="token punctuation">,</span>
              <span class="token literal-property property">duration</span><span class="token operator">:</span> <span class="token number">1000</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">reject</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>msg <span class="token operator">==</span> <span class="token string">&quot;\u4E0D\u5141\u8BB8\u91CD\u590D\u63D0\u4EA4\uFF0C\u8BF7\u7A0D\u540E\u518D\u8BD5&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            wx<span class="token punctuation">.</span><span class="token function">showToast</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
              <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&quot;\u4E0D\u5141\u8BB8\u9891\u7E41\u64CD\u4F5C\uFF0C\u8BF7\u7A0D\u540E\u518D\u8BD5&quot;</span><span class="token punctuation">,</span>
              <span class="token literal-property property">icon</span><span class="token operator">:</span> <span class="token string">&quot;none&quot;</span><span class="token punctuation">,</span>
              <span class="token literal-property property">mask</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
              <span class="token literal-property property">duration</span><span class="token operator">:</span> <span class="token number">1000</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>               <span class="token comment">//500\u670D\u52A1\u7AEF\u51FA\u9519</span>
            res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>code <span class="token operator">==</span> <span class="token number">500</span> <span class="token operator">&amp;&amp;</span>
            res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>data <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">&amp;&amp;</span>
            res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>msg <span class="token operator">!=</span> <span class="token string">&quot;\u64CD\u4F5C\u5931\u8D25&quot;</span>
          <span class="token punctuation">)</span> <span class="token punctuation">{</span>
            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span> res<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
            wx<span class="token punctuation">.</span><span class="token function">showModal</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
              <span class="token literal-property property">content</span><span class="token operator">:</span> <span class="token string">&quot;\u672A\u77E5\u9519\u8BEF\uFF0C\u8BF7\u53CD\u9988\u7ED9\u7BA1\u7406\u5458&quot;</span><span class="token punctuation">,</span>
              <span class="token literal-property property">showCancel</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
            <span class="token function">resolve</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          <span class="token function">reject</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div><p>\u4E0A\u9762\u7684\u770B\u8D77\u6765\u5F88\u590D\u6742\uFF0C\u4F46\u5176\u5B9E\u53EF\u4EE5\u4E0D\u7528\u7BA1\u90A3\u4E48\u591A\uFF0C\u4F7F\u7528\u65B9\u6CD5\u5F88\u7B80\u5355\uFF1A</p><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> request <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../../js/http.js&#39;</span>

<span class="token comment">//get\u8BF7\u6C42</span>
<span class="token function">request</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&quot;/secondClass/activity/list&quot;</span><span class="token punctuation">,</span> <span class="token comment">//\u5730\u5740\uFF08\u6839\u636Eapifox\u6765\uFF09</span>
    <span class="token literal-property property">method</span><span class="token operator">:</span> <span class="token string">&quot;GET&quot;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;123&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span> <span class="token comment">//\u62FF\u5230\u6570\u636E</span>
<span class="token punctuation">}</span>

<span class="token comment">//\u5176\u4ED6\u8BF7\u6C42\u7684\u5199\u6CD5\u53EF\u4EE5\u4ECEpages\u91CC\u9762\u67D0\u4E9B\u9875\u9762\u7684\`.js\`\u6587\u4EF6\u91CC\u9762\u627E</span>
</code></pre></div>`,6),e=[o];function c(l,u,k,r,i,d){return a(),s("div",null,e)}var g=n(t,[["render",c]]);export{m as __pageData,g as default};
